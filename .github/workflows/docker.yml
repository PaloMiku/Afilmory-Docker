name: Docker Build

on:
  push:
    branches:
      - main
  schedule:
     - cron: '0 16 * * *'

  repository_dispatch:
    types: [trigger-workflow]
    
permissions: write-all
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PNPM_VERSION: 9.x.x
  HASH_FILE: build_hash

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    if: ${{ github.event.head_commit.message != 'Update hash file' }}

    outputs:
      hash_content: ${{ steps.read_hash.outputs.hash_content }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Read HASH_FILE content
        id: read_hash
        run: |
          content=$(cat ${{ env.HASH_FILE }}) || true
          echo "hash_content=$content" >> "$GITHUB_OUTPUT"
  check:
    name: Check Should Rebuild
    runs-on: ubuntu-latest
    needs: prepare
    outputs:
      canceled: ${{ steps.use_content.outputs.canceled }}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: Afilmory/afilmory
          fetch-depth: 0
          lfs: true

      - name: Use content from prev job and compare
        id: use_content
        env:
          FILE_HASH: ${{ needs.prepare.outputs.hash_content }}
        run: |
          file_hash=$FILE_HASH
          current_hash=$(git rev-parse --short HEAD)
          echo "File Hash: $file_hash"
          echo "Current Git Hash: $current_hash"
          if [ "$file_hash" == "$current_hash" ]; then
            echo "Hashes match. Stopping workflow."
            echo "canceled=true" >> $GITHUB_OUTPUT
          else
            echo "Hashes do not match. Continuing workflow."
          fi

  build:
    name: Build artifact
    runs-on: ubuntu-latest
    needs: check
    if: ${{needs.check.outputs.canceled != 'true'}}
    
    outputs:
      sha_short: ${{ steps.store.outputs.sha_short }}
      branch: ${{ steps.store.outputs.branch }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Fill environment variables from secrets
      run: |
        sed -i 's/__S3_ACCESS_KEY_ID__/${{ secrets.S3_ACCESS_KEY_ID }}/g' .env
        sed -i 's/__S3_SECRET_ACCESS_KEY__/${{ secrets.S3_SECRET_ACCESS_KEY }}/g' .env
        sed -i 's/__S3_ENDPOINT__/${{ secrets.S3_ENDPOINT }}/g' .env
        
    - name: Login to Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: ghcr.io/palomiku/afilmory:latest
        secrets: |
          S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }}
          S3_ENDPOINT=${{ secrets.S3_ENDPOINT }}
          GIT_TOKEN=${{ secrets.GITHUB_TOKEN }}

    - name: Store artifact commit version
      shell: bash
      id: store
      run: |
        sha_short=$(git rev-parse --short HEAD)
        branch_name=$(git rev-parse --abbrev-ref HEAD)
        echo "sha_short=$sha_short" >> "$GITHUB_OUTPUT"
        echo "branch=$branch_name" >> "$GITHUB_OUTPUT"

  store:
    name: Store artifact commit version
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false 
          fetch-depth: 0 
          
      - name: Use outputs from build
        env:
          SHA_SHORT: ${{ needs.build.outputs.sha_short }}
          BRANCH: ${{ needs.build.outputs.branch }}
        run: |
          echo "SHA Short from build: $SHA_SHORT"
          echo "Branch from build: $BRANCH"
      - name: Write hash to file
        env:
          SHA_SHORT: ${{ needs.build.outputs.sha_short }}

        run: |
          echo "SHA_SHORT: $SHA_SHORT"
          echo $SHA_SHORT > ${{ env.HASH_FILE }}
      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add ${{ env.HASH_FILE }}
          git status
          git commit -a -m "Update hash file"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}